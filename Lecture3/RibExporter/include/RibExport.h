#ifndef RIBEXPORT_H_
#define RIBEXPORT_H_

#include <maya/MGlobal.h>
#include <maya/MObject.h>
#include <maya/MArgList.h>
#include <maya/MPxCommand.h>
#include <maya/MFnDagNode.h>
#include <maya/MPxFileTranslator.h>
#include <fstream>
//----------------------------------------------------------------------------------------------------------------------
// @brief a file export to export rib files
//----------------------------------------------------------------------------------------------------------------------

class RibExport : public MPxFileTranslator
{
public:
  //----------------------------------------------------------------------------------------------------------------------
  // virtual dtor
  //----------------------------------------------------------------------------------------------------------------------
  virtual		~RibExport();
  //----------------------------------------------------------------------------------------------------------------------

  MStatus		writer( const MFileObject& _file,
                    const MString& _optionsString,
                    FileAccessMode _mode
                   );

  //----------------------------------------------------------------------------------------------------------------------
  ///	@brief  returns true if the file translator supports importing
  ///	@return	true
  ///
  bool        haveReadMethod	 () const;

  //----------------------------------------------------------------------------------------------------------------------
  ///	@brief  returns true if the file translator supports exporting
  ///	@return	true
  //----------------------------------------------------------------------------------------------------------------------
  bool        haveWriteMethod	 () const;

  //----------------------------------------------------------------------------------------------------------------------
  ///	@brief  returns the file extension of this format
  ///	@return	"rib"
  //----------------------------------------------------------------------------------------------------------------------
  MString     defaultExtension () const;


  //----------------------------------------------------------------------------------------------------------------------
  /// @brief our creator function called when the class is created
  /// the returns a new instance of this class
  //----------------------------------------------------------------------------------------------------------------------
  static void*	creator();

private:
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief the file stream to write to
  //----------------------------------------------------------------------------------------------------------------------
  std::ofstream m_stream;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief start frame
  //----------------------------------------------------------------------------------------------------------------------
  uint m_startFrame;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief end frame
  //----------------------------------------------------------------------------------------------------------------------
  uint m_endFrame;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief frame step frame
  //----------------------------------------------------------------------------------------------------------------------
  uint m_frameStep;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief pixel aspect ratio from render globals
  //----------------------------------------------------------------------------------------------------------------------
  float m_pixelAspectRatio;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief the name of the image file to generatr for renderman from render globals
  //----------------------------------------------------------------------------------------------------------------------
  MString m_imageName;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief image width
  //----------------------------------------------------------------------------------------------------------------------
  uint m_imageWidth;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief image height
  //----------------------------------------------------------------------------------------------------------------------
  uint m_imageHeight;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief frame step frame
  //----------------------------------------------------------------------------------------------------------------------
  uint m_framePad;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief flag to indicate if mesh should be exported
  //----------------------------------------------------------------------------------------------------------------------
  bool m_exportMesh;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief flag to indicate if normals should be exported
  //----------------------------------------------------------------------------------------------------------------------
  bool m_exportNormals;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief flag to indicate if uvs should be exported
  //----------------------------------------------------------------------------------------------------------------------
  bool m_exportUV;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief flag to indicate if lights should be exported
  //----------------------------------------------------------------------------------------------------------------------
  bool m_exportLights;

  //----------------------------------------------------------------------------------------------------------------------
  /// @brief parse the command line options
  /// @param[in] _optionsString the string to parse
  //----------------------------------------------------------------------------------------------------------------------
  void parseCommandOptions(const MString& _optionsString);


  //----------------------------------------------------------------------------------------------------------------------
  /// @brief export camera
  //----------------------------------------------------------------------------------------------------------------------
  MStatus exportCamera();
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief export light
  //----------------------------------------------------------------------------------------------------------------------
  void exportLight(MObject _node);
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief export mesh
  //----------------------------------------------------------------------------------------------------------------------
  MStatus exportMesh(MObject _node);
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief get the info from the render globals
  //----------------------------------------------------------------------------------------------------------------------
  void getRenderGlobals();


};

//----------------------------------------------------------------------------------------------------------------------

#endif

